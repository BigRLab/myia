/*
 * Style for Myia's AST when it is pretty-printed using
 * hrepr. This style will be automatically inserted when
 * outputting to an html file or to a Jupyter notebook.
 */

:root {
	--hover-border-color: blue;
}

.myia-ns-builtin {
	background: lightgreen;
}

.myia-ns-global {
	background: orange;
}

.Lambda {
	font-family: monospace;
}

.Namespace {
	display: none;
}

.Symbol, .Value {
	display: inline-block;
	padding: 2px;
}

.SymbolIndex {
	font-size: 75%;
	position: relative;
	top: 0.5em;
}

.Keyword {
	display: inline-block;
	font-weight: bold;
	padding: 2px;
}

.Apply {
	display: inline-block;
	border: 1px solid black;
	margin: 2px;
	padding: 2px;
}

.Apply:hover {
	border: 1px solid var(--hover-border-color);
}

.Apply > :nth-child(1) {
	font-weight: bold;
	color: #008;
	margin-right: 5px;
}

.Begin, .Lambda, .Let {
	display: inline-block;
	border-left: 1px solid black;
	padding-left: 2px;
	margin-left: 2px;
}

.Begin:hover, .Lambda:hover, .Let:hover {
	border-left: 1px solid var(--hover-border-color);
}

.Lambda > :nth-child(3),
.Begin > :nth-child(2),
.Let > :nth-child(2),
.Let > :nth-child(4) {
	display: block;
	border-left: 3px solid black;
	padding-left: 5px;
	margin-left: 5px;
}

.Lambda > :nth-child(3):hover,
.Begin > :nth-child(2):hover,
.Let > :nth-child(2):hover,
.Let > :nth-child(4):hover {
	border-left: 3px solid var(--hover-border-color);
}

.Begin > :nth-child(2) > * {
	display: block;
}

.Tuple {
	display: inline-block;
	border: 2px dotted green;
	margin: 2px;
	padding: 2px;
}

.Tuple > * {
	margin-left: 5px;
	margin-right: 5px;
}

.LambdaArguments {
	display: inline-block;
}

.LambdaArguments > * {
	padding: 5px;
	color: #f80;
	font-weight: bold;
}

.IfCond:before, .IfThen:before, .IfElse:before {
	font-weight: bold;
	padding-right: 5px;	
}

.IfCond:before {
	content: '?';
	color: #808;
}

.IfThen:before {
	content: '✓';
	color: #080;
}

.IfElse:before {
	content: '✖';
	color: #f00;
}

.If {
	display: inline-block;
}

.If > * {
	display: block;
}

.If > * > * {
	vertical-align: middle;
}

.Let > * {
	display: block;
}

.LetBindings {
	display: table;
}

.LetBinding {
	display: table-row;
}

.LetBinding > * {
	display: table-cell;
}

.LetBinding > :nth-child(1) {
	padding-right: 15px;
	color: #f80;
	font-weight: bold;
}

.Closure {
	border: 2px dotted black;
	margin: 2px;
	padding: 2px;
}

.Closure > :nth-child(1) {
	color: #008;
	margin-right: 5px;
}


.ClosureImpl, .FunctionImpl, .PrimitiveImpl, .VMFrame {
	display: inline-flex;
	flex-direction: column;
	border: 1px solid blue;
}

.myia-ns-null {
	color: #bbb;
}

.myia-ns-null .SymbolIndex {
	display: none;
}

.class_title {
	color: white;
	font-weight: bold;
	background: blue;
	padding: 3px;
}

.class_contents {
	padding: 5px;
}

.class_contents > * {
	display: block;
}

.unbound, .unbound * {
	background-color: red;
	color: white;
}

.missing_source {
}

.error {
	background: #fdd;
}

.error.error0 {
	background: #faa;
}

.hrepr-Exception {
	max-width: 800px;
}

